package at.learnhub.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import org.eclipse.microprofile.openapi.annotations.media.Schema;

import java.util.List;

@Entity
@Schema(description = "Represents a quiz question including its details, answers, and metadata.")
public class Question {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Schema(
            description = "Unique identifier of the question. Generated by the system.",
            example = "123",
            readOnly = true
    )
    private Long id;

    @Schema(
            description = "The main text or body of the question presented to the user.",
            example = "What is the capital of France?"
    )
    private String text;

    @Schema(
            description = "Detailed explanation behind the correct answer(s). Useful for feedback.",
            example = "Paris is the capital and largest city of France."
    )
    private String explanation;

    @Schema(
            description = "Numerical code representing the question type (e.g., multiple choice, freetext).",
            example = "1"
    )
    private Integer type;

    @Schema(
            description = "Difficulty level of the question, e.g., 1 (easy) to 3 (hard).",
            example = "3"
    )
    private Integer difficulty;

    @Column(name = "is_public")
    @Schema(
            description = "Whether this question is publicly available to all users.",
            example = "true"
    )
    private Boolean isPublic;

    @ManyToOne
    @JoinColumn(name = "topic_pool_id")
    @JsonIgnoreProperties({"questions", "topicContents", "exams"})
    private TopicPool topicPool;

    @ManyToOne
    @JoinColumn(name = "media_id")
    @Schema(
            description = "Optional media file associated with this question (e.g., image, diagram).",
            implementation = MediaFile.class
    )
    private MediaFile media;

    @ManyToOne
    @JoinColumn(name = "user_id")
    @JsonIgnoreProperties({"createdQuestions", "topicContents"})
    private User user;

    @OneToMany(mappedBy = "question")
    @JsonIgnoreProperties({"question"})
    private List<Answer> answers;

    @OneToMany(mappedBy = "question")
    @JsonIgnoreProperties({"question"})
    private List<QuestionPoolEntry> entries;

    @OneToMany(mappedBy = "question")
    @JsonIgnoreProperties({"question"})
    private List<Solution> solutions;

    // Getters and setters

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public String getExplanation() {
        return explanation;
    }

    public void setExplanation(String explanation) {
        this.explanation = explanation;
    }

    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public Integer getDifficulty() {
        return difficulty;
    }

    public void setDifficulty(Integer difficulty) {
        this.difficulty = difficulty;
    }

    public Boolean getPublic() {
        return isPublic;
    }

    public void setPublic(Boolean aPublic) {
        isPublic = aPublic;
    }

    public TopicPool getTopicPool() {
        return topicPool;
    }

    public void setTopicPool(TopicPool topicPool) {
        this.topicPool = topicPool;
    }

    public MediaFile getMedia() {
        return media;
    }

    public void setMedia(MediaFile media) {
        this.media = media;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public List<Answer> getAnswers() {
        return answers;
    }

    public void setAnswers(List<Answer> answers) {
        this.answers = answers;
    }

    public List<QuestionPoolEntry> getEntries() {
        return entries;
    }

    public void setEntries(List<QuestionPoolEntry> entries) {
        this.entries = entries;
    }

    public List<Solution> getSolutions() {
        return solutions;
    }

    public void setSolutions(List<Solution> solutions) {
        this.solutions = solutions;
    }
}
